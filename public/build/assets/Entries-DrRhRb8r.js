import { l as V, d as O, o as n, c as k, w as g, a as e, n as $, u as h, f as p, g as L, t as c, i as Q, p as C, v as E, e as i, F as T, h as F, b, T as W, Z as P } from "./app-B9AaS3di.js"; import { _ as X } from "./AppLayout-BpgBCMDE.js"; import { r as Z, f as A, _ as G, t as N, a as H, b as J } from "./general-CT66CFmJ.js"; import { _ as K } from "./PrimaryButton-C6t27UzX.js"; import { _ as Y } from "./SecondaryButton-DopaOyGA.js"; import { r as ee } from "./PrinterIcon-CisfNOAW.js"; import { r as te } from "./BanknotesIcon-D31jRm2d.js"; import { r as R } from "./EyeIcon-EVOI874d.js"; import { _ as se } from "./FloatButton-Ci1qFIeh.js"; import "./Modal-tn0Up1zP.js"; const ae = { class: "pb-12 space-y-12 divide-y-2" }, oe = { class: "py-4" }, ne = e("h2", { class: "text-base font-semibold leading-7 text-gray-900" }, "Informações Básicas", -1), re = e("p", { class: "mt-1 text-sm leading-6 text-gray-600" }, "Informações sobre a entrada como nome do funcionário, data da entrada e observações", -1), ie = { class: "mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6" }, le = { class: "sm:col-span-3" }, de = e("label", { for: "entry-employee", class: "block text-sm font-medium leading-6 text-gray-900 required-input-label" }, "Funcionário", -1), ce = { class: "mt-2" }, ue = { key: 0, class: "text-red-500 text-sm" }, me = { class: "sm:col-span-3" }, pe = e("label", { for: "entry-date", class: "block text-sm font-medium leading-6 text-gray-900 required-input-label" }, "Data do Entrada", -1), ye = { class: "mt-2" }, he = ["max"], xe = { key: 0, class: "text-red-500 text-sm" }, _e = { class: "sm:col-span-6" }, ve = e("label", { for: "entry-motive", class: "block text-sm font-medium leading-6 text-gray-900 required-input-label" }, "Motivo", -1), fe = { class: "mt-2" }, be = { key: 0, class: "text-red-500 text-sm" }, ge = { class: "sm:col-span-6" }, we = e("label", { for: "entry-observations", class: "block text-sm font-medium leading-6 text-gray-900" }, "Observações", -1), qe = { class: "mt-2" }, ke = { key: 0, class: "text-red-500 text-sm" }, $e = { key: 0, class: "py-4" }, Ce = e("h2", { class: "text-base font-semibold leading-7 text-gray-900" }, "Lista de Itens", -1), Ee = e("p", { class: "mt-1 text-sm leading-6 text-gray-600" }, "Adicione os itens do entrada.", -1), Ve = { class: "mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-4" }, Se = { class: "sm:col-span-4" }, Me = { class: "relative" }, Ie = e("label", { for: "item-selecter", class: "block text-sm font-medium leading-6 text-gray-900" }, "Selecione os itens de entrada", -1), Ue = ["disabled"], Le = { key: 0, class: "absolute z-10 w-full mx-auto sm:w-96 bg-white border rounded mt-2 h-96 overflow-y-scroll" }, De = ["onMousedown"], je = { class: "sm:col-span-4" }, Oe = { key: 0, class: "min-w-full text-left block text-sm font-medium leading-6 text-gray-900" }, Te = { class: "border-b font-medium dark:border-neutral-500" }, Be = e("th", { scope: "col", class: "px-6 py-4 text-center" }, "#", -1), Fe = e("th", { scope: "col", class: "px-6 py-4 text-center" }, "Item", -1), Ne = e("th", { scope: "col", class: "px-6 py-4 text-center" }, "Qtd. Estoque", -1), Ae = e("th", { scope: "col", class: "px-6 py-4 text-center" }, "Qtd. Entrada", -1), Re = e("th", { scope: "col", class: "px-6 py-4 text-center" }, "Und. Medida", -1), ze = { key: 0, scope: "col", class: "px-6 py-4 text-center" }, Qe = { class: "whitespace-nowrap py-4 text-center font-medium" }, We = { class: "whitespace-nowrap py-4 text-center font-medium" }, Pe = { class: "whitespace-nowrap py-4 text-center font-medium flex justify-center" }, Xe = ["value", "onInput", "disabled"], Ze = { class: "whitespace-nowrap py-4 text-center font-medium" }, Ge = { key: 0, class: "whitespace-nowrap py-4 text-center font-mono text-2xl" }, He = ["onClick", "title"], Je = { key: 1, class: "p-5 bg-gray-200 rounded-md block text-sm font-medium leading-6 text-gray-900" }, Ke = { __name: "CreateUpdateEntriesModal", props: { modal: Object, entry: { type: Object, default: null }, items: Array }, emits: ["close", "submit"], setup(s, { emit: S }) { const l = S, d = s, M = /^\d{4}-\d{2}-\d{2}$/, D = V(() => { const { motive: o, employee: a, date: t } = d.entry; return !a || !a.length || !o || !o.length ? !1 : t && M.test(t) }), f = V(() => { const { employee: o, motive: a, date: t, items_list: y } = d.entry; return !o || !o.length || !a || !a.length || !t || !M.test(t) || y.length < 1 ? !1 : y.every(x => x.quantity > 0 && x.movement_quantity > 0 && x.movement_quantity <= x.quantity) }), w = V(() => d.modal.mode === "see"), v = O(""), q = O(!1), B = V(() => d.items.filter(o => o.name.toLowerCase().includes(v.value.toLowerCase()) && !d.entry.items_list.some(a => a.id === o.id))), j = o => { o === "in" && (q.value = !0), o === "out" && (q.value = !1) }, I = () => { d.entry.estimated_value = d.entry.items_list.reduce((o, a) => o + a.price * a.movement_quantity, 0), d.entry.total_value = d.entry.estimated_value }, m = o => { d.entry.items_list.push({ id: o.id, name: o.name, quantity: o.quantity, max_quantity: o.max_quantity, min_quantity: o.min_quantity, movement_quantity: 1, measurement_unit: o.measurement_unit.abbreviation, price: o.price, amount: o.price }), v.value = "", q.value = !1, I() }, u = o => { d.entry.items_list = d.entry.items_list.filter(a => a.id !== o), I() }, r = () => { l("close") }, _ = () => { l("submit") }; return (o, a) => (n(), k(G, { show: s.modal.show, maxWidth: D.value || w.value ? "3xl" : "2xl", onClose: r }, { icon: g(() => [e("div", { class: $(["mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-blue-400 sm:mx-0 sm:h-10 sm:w-10", { "bg-yellow-400": s.modal.mode === "update", "bg-green-400": s.modal.mode === "pay", "bg-gray-400": s.modal.mode === "see" }]) }, [s.modal.mode === "create" ? (n(), k(h(ee), { key: 0, class: "w-5 h-5 text-white" })) : p("", !0), s.modal.mode === "update" ? (n(), k(h(Z), { key: 1, class: "w-5 h-5 text-white" })) : p("", !0), s.modal.mode === "pay" ? (n(), k(h(te), { key: 2, class: "w-5 h-5 text-white" })) : p("", !0), s.modal.mode === "see" ? (n(), k(h(R), { key: 3, class: "w-5 h-5 text-white" })) : p("", !0)], 2)]), title: g(() => [L(c(s.modal.title), 1)]), content: g(() => [e("form", { onSubmit: Q(_, ["prevent"]) }, [e("div", ae, [e("section", oe, [ne, re, e("div", ie, [e("div", le, [de, e("div", ce, [C(e("input", { type: "text", name: "entry-employee", id: "entry-employee", autocomplete: "on", class: "simple-input disabled:bg-gray-200", placeholder: "Nome do funcionario", "onUpdate:modelValue": a[0] || (a[0] = t => s.entry.employee = t), required: "" }, null, 512), [[E, s.entry.employee]]), s.entry.errors.employee ? (n(), i("p", ue, c(s.entry.errors.employee), 1)) : p("", !0)])]), e("div", me, [pe, e("div", ye, [C(e("input", { type: "date", name: "entry-date", id: "entry-date", autocomplete: "on", class: "simple-input disabled:bg-gray-200", autofocus: "true", placeholder: "Data do Entrada", max: h(A)(), "onUpdate:modelValue": a[1] || (a[1] = t => s.entry.date = t), required: "" }, null, 8, he), [[E, s.entry.date]]), s.entry.errors.date ? (n(), i("p", xe, c(s.entry.errors.date), 1)) : p("", !0)])]), e("div", _e, [ve, e("div", fe, [C(e("input", { type: "text", name: "entry-motive", id: "entry-motive", autocomplete: "on", class: "simple-input disabled:bg-gray-200", placeholder: "Motivo do Entrada", "onUpdate:modelValue": a[2] || (a[2] = t => s.entry.motive = t), required: "" }, null, 512), [[E, s.entry.motive]]), s.entry.errors.motive ? (n(), i("p", be, c(s.entry.errors.motive), 1)) : p("", !0)])]), e("div", ge, [we, e("div", qe, [C(e("textarea", { type: "text", observations: "entry-observations", id: "entry-observations", autocomplete: "on", class: "simple-input disabled:bg-gray-200", placeholder: "Descreva a título mais detalhadamente ou insira informações adicionais", "onUpdate:modelValue": a[3] || (a[3] = t => s.entry.observations = t) }, null, 512), [[E, s.entry.observations]]), s.entry.errors.observations ? (n(), i("p", ke, c(s.entry.errors.observations), 1)) : p("", !0)])])])]), D.value || w.value ? (n(), i("section", $e, [Ce, Ee, e("div", Ve, [e("div", Se, [e("div", Me, [Ie, C(e("input", { id: "item-selecter", "onUpdate:modelValue": a[4] || (a[4] = t => v.value = t), onFocus: a[5] || (a[5] = t => j("in")), onBlur: a[6] || (a[6] = t => j("out")), class: "simple-input disabled:bg-gray-200 px-4 py-2 w-full", placeholder: "Digite para pesquisar", disabled: w.value }, null, 40, Ue), [[E, v.value]]), q.value ? (n(), i("ul", Le, [(n(!0), i(T, null, F(B.value, (t, y) => (n(), i("li", { key: y, class: "py-2 px-4 cursor-pointer hover:bg-gray-200", onMousedown: U => m(t) }, [e("span", { class: $(["inline", { "text-blue-500": t.quantity != 0 && t.quantity >= t.max_quantity, "text-green-500": t.quantity < t.max_quantity && t.quantity >= t.min_quantity, "text-yellow-500": t.quantity < t.min_quantity && t.quantity > 0, "text-red-500": t.quantity == 0 }]) }, "(" + c(t.quantity) + ")", 3), L(" " + c(t.name), 1)], 40, De))), 128))])) : p("", !0)])]), e("div", je, [d.entry.items_list.length ? (n(), i("table", Oe, [e("thead", Te, [e("tr", null, [Be, Fe, Ne, Ae, Re, s.modal.mode !== "see" ? (n(), i("th", ze, " Deletar")) : p("", !0)])]), e("tbody", null, [(n(!0), i(T, null, F(d.entry.items_list, t => (n(), i("tr", { key: t.id, class: $(["border-b transition duration-300 ease-in-out hover:bg-neutral-100 print:break-inside-avoid", { "bg-yellow-100": t.movement_quantity == t.quantity, "bg-red-100": t.movement_quantity > t.quantity }]) }, [e("td", Qe, c(t.id), 1), e("td", We, c(t.name), 1), e("td", { class: $(["whitespace-nowrap py-4 text-center font-medium", { "text-blue-500": t.quantity != 0 && t.quantity >= t.max_quantity, "text-green-500": t.quantity < t.max_quantity && t.quantity >= t.min_quantity, "text-yellow-500": t.quantity < t.min_quantity && t.quantity > 0, "text-red-500": t.quantity == 0 }]) }, c(t.quantity), 3), e("td", Pe, [e("input", { type: "number", min: "0.01", step: "0.01", value: t.movement_quantity, onInput: y => { t.movement_quantity = parseFloat(y.target.value), t.amount = t.price * y.target.value, I() }, class: "simple-input disabled:bg-gray-200 w-2/3", disabled: s.modal.mode !== "create" }, null, 40, Xe)]), e("td", Ze, c(t.measurement_unit), 1), s.modal.mode !== "see" ? (n(), i("td", Ge, [e("button", { onClick: y => u(t.id), title: "Remover " + t.name }, "×", 8, He)])) : p("", !0)], 2))), 128))])])) : (n(), i("p", Je, " Nenhum item selecionado até o momento!"))])])])) : p("", !0)])], 32)]), footer: g(() => [s.modal.mode !== "see" ? (n(), k(Y, { key: 0, class: $({ disabled: s.entry.processing }), onClick: a[7] || (a[7] = t => r()) }, { default: g(() => [L(" Cancelar ")]), _: 1 }, 8, ["class"])) : p("", !0), b(K, { class: $({ disabled: s.entry.processing || !f.value }), disabled: s.entry.processing || !f.value, onClick: a[8] || (a[8] = t => _()) }, { default: g(() => [L(c(s.modal.primary_button_txt), 1)]), _: 1 }, 8, ["class", "disabled"])]), _: 1 }, 8, ["show", "maxWidth"])) } }, Ye = { class: "font-semibold text-xl text-gray-800 leading-tight" }, et = { class: "pt-12 print:hidden print:pt-0" }, tt = { class: "max-w-7xl mx-auto sm:px-6 lg:px-8 print:w-full" }, st = { class: "bg-white overflow-hidden shadow-xl sm:rounded-lg p-5" }, at = { class: "flex flex-row items-center space-x-3" }, ot = { class: "py-12 print:py-6" }, nt = { class: "max-w-7xl mx-auto print:max-w-full" }, rt = { class: "px-0 print:px-0" }, it = { class: "bg-white overflow-hidden shadow-xl sm:rounded-lg print:shadow-none" }, lt = { class: "flex flex-col" }, dt = { class: "overflow-x-auto sm:-mx-6 lg:-mx-8" }, ct = { class: "inline-block min-w-full py-2 sm:px-6 lg:px-8" }, ut = { class: "overflow-hidden" }, mt = { class: "min-w-full text-left text-sm font-light" }, pt = e("thead", { class: "border-b font-medium dark:border-neutral-500" }, [e("tr", null, [e("th", { scope: "col", class: "px-6 py-4 text-center" }, "#"), e("th", { scope: "col", class: "px-6 py-4 text-center" }, "Funcionário"), e("th", { scope: "col", class: "px-6 py-4 text-center" }, "Motivo"), e("th", { scope: "col", class: "px-6 py-4 text-center" }, "Data do Entrada "), e("th", { scope: "col", class: "px-6 py-4 text-center print:hidden", colspan: "2" }, " Ações")])], -1), yt = { class: "border-b transition duration-300 ease-in-out hover:bg-neutral-100 print:break-inside-avoid" }, ht = { class: "whitespace-nowrap py-4 text-center font-medium" }, xt = { class: "whitespace-normal px-6 py-4 text-center trim" }, _t = ["title"], vt = { class: "whitespace-nowrap px-2 py-4 text-center" }, ft = { class: "whitespace-nowrap px-2 py-4 text-center print:hidden" }, bt = ["title", "onClick"], gt = ["title", "onClick"], wt = { key: 1, class: "transition duration-300 ease-in-out hover:bg-neutral-100 print:break-inside-avoid" }, qt = e("td", { class: "whitespace-nowrap px-6 py-4 text-center", colspan: "9" }, "Não há entradas cadastradas no momento!", -1), kt = [qt], jt = { __name: "Entries", props: { page: Object, page_options: { type: Array, default: null }, entries_list: Object, items: Object }, setup(s) { const S = s, l = W({ id: null, employee: "", motive: "", date: "", total_value: 0, observations: "", items_list: [] }), d = O(""), M = V(() => { const m = d.value.toLowerCase(); return S.entries_list.filter(u => { const { id: r, entity_name: _, motive: o, observations: a, date: t, items: y } = u, U = [r.toString(), (_ == null ? void 0 : _.toLowerCase()) ?? "", (o == null ? void 0 : o.toLowerCase()) ?? "", (a == null ? void 0 : a.toLowerCase()) ?? "", (t == null ? void 0 : t.toLowerCase()) ?? ""]; for (let x of U) if (x.includes(m)) return !0; return y.some(x => x.name.toLowerCase().includes(m)) }) }), D = V(() => S.entries_list.reduce((m, u) => m + u.accounting.partial_value, 0)), f = O({ mode: "create", show: !1, get title() { switch (this.mode) { case "create": return "Criar entrada"; case "update": return "Editar entrada"; case "see": return "Ver informações da entrada" } }, get primary_button_txt() { switch (this.mode) { case "create": return "Cadastrar"; case "update": return "Atualizar"; case "see": return "Fechar" } } }), w = (m, u = null) => { const r = ["update", "see"].includes(m); if (u !== null && r) { const _ = S.entries_list.find(o => o.id === u); if (_) { const { id: o, entity_name: a, date: t, motive: y, observations: U, accounting: x, items: z } = _; l.id = o, l.employee = a, l.motive = y, l.date = t, l.estimated_value = x.estimated_value, l.total_value = x.total_value, l.partial_value = x.partial_value, l.observations = U, l.items_list = z } } f.value.mode = m, f.value.show = !0 }, v = () => { l.reset(), f.value.show = !1 }, q = () => { l.post(route("entries.store"), { preserveScroll: !0, onSuccess: () => v(), onError: m => { console.log(m) } }) }, B = () => { l.put(route("entries.update", l.id), { preserveScroll: !0, onSuccess: () => v() }) }, j = (m, u) => { confirm(`Você tem certeza que deseja excluir a entrada de material para "${u}"? Todos os materiais comprados voltarão para o estoque! Esta ação não poderá ser desfeita!`) && l.delete(route("entries.destroy", m), { preserveScroll: !0, onSuccess: () => alert("Entrada deletado com sucesso!") }) }, I = () => { switch (f.value.mode) { case "create": return q(); case "update": return B(); case "see": return v(); default: alert("Método desconhecido. Informar o Técnico.") } }; return (m, u) => (n(), i(T, null, [b(h(P), { title: s.page.name }, null, 8, ["title"]), b(X, { page: s.page, page_options: s.page_options }, { header: g(() => [e("h2", Ye, c(s.page.name) + " | " + c(h(N)(D.value)), 1), b(se, { icon: "plus", onClick: u[0] || (u[0] = r => w("create")), title: "Cadastrar Entry", class: "print:hidden" })]), default: g(() => [e("div", et, [e("div", tt, [e("div", st, [e("div", at, [b(h(H), { class: "w-5 y-5" }), C(e("input", { type: "text", name: "search_term", id: "search_term", autocomplete: "on", class: "simple-input", autofocus: "true", placeholder: "Pesquisar termo...", "onUpdate:modelValue": u[1] || (u[1] = r => d.value = r) }, null, 512), [[E, d.value]])])])])]), e("div", ot, [e("div", nt, [e("div", rt, [e("div", it, [e("div", lt, [e("div", dt, [e("div", ct, [e("div", ut, [e("table", mt, [pt, e("tbody", null, [M.value.length ? (n(!0), i(T, { key: 0 }, F(M.value, r => (n(), i("tr", yt, [e("td", ht, c(r.id), 1), e("td", xt, [L(c(r.entity_name) + " ", 1), r.observations ? (n(), i("span", { key: 0, title: r.observations, class: "inline-flex items-center rounded-md bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10 cursor-help" }, "OBS", 8, _t)) : p("", !0)]), e("td", vt, c(h(N)(r.motive)), 1), e("td", ft, c(h(A)(r.date, !0)), 1), e("td", { class: "whitespace-nowrap px-4 py-4 text-center cursor-pointer hover:text-indigo-700 active:text-indigo-900 select-none print:hidden", title: "VER: Compra de " + r.entity_name, onClick: _ => w("see", r.id) }, [b(h(R), { class: "w-5 h-5 m-auto" })], 8, bt), e("td", { class: "whitespace-nowrap px-4 py-4 text-center cursor-pointer hover:text-red-700 active:text-red-900 select-none print:hidden", title: "EXCLUIR: Compra de " + r.entity_name, onClick: _ => j(r.id, r.entity_name) }, [b(h(J), { class: "w-5 h-5 m-auto" })], 8, gt)]))), 256)) : (n(), i("tr", wt, kt))])])])])])])])])])]), b(Ke, { modal: f.value, entry: h(l), items: s.items, onSubmit: I, onClose: v }, null, 8, ["modal", "entry", "items"])]), _: 1 }, 8, ["page", "page_options"])], 64)) } }; export { jt as default };
